const axios = require("axios");

module.exports = {
  config: {
    name: "funvideo",
    version: "1.0",
    author: "Arafat",
    countDown: 5,
    role: 0,
    shortDescription: "ржлрж╛ржирж┐ ржнрж┐ржбрж┐ржУ ржжрзЗржЦрж╛ржУ",
    longDescription: "ржЯрж┐ржХржЯржХ ржерзЗржХрзЗ рж░рзЗржирзНржбржо ржлрж╛ржирж┐ ржнрж┐ржбрж┐ржУ ржПржирзЗ ржжрзЗржЦрж╛рзЯ",
    category: "media",
    guide: {
      en: "{pn}"
    }
  },

  onStart: async function ({ message }) {
    try {
      // рж░рзЗржирзНржбржо ржХрж┐ржУрзЯрж╛рж░рзНржб ржжрж┐рзЯрзЗ ржлрж╛ржирж┐ ржнрж┐ржбрж┐ржУ ржЦрзЛржБржЬрж╛
      const keywords = ["funny", "meme", "fail", "comedy", "laugh", "prank"];
      const query = keywords[Math.floor(Math.random() * keywords.length)];

      const options = {
        method: 'GET',
        url: `https://tiktok-video-no-watermark2.p.rapidapi.com/feed/search`,
        params: {
          keywords: query,
          count: '1'
        },
        headers: {
          'x-rapidapi-host': 'tiktok-video-no-watermark2.p.rapidapi.com',
          'x-rapidapi-key': '53fda6446fmshd999012aafb9fc7p190286jsn894094d3d656'
        }
      };

      const res = await axios.request(options);

      if (!res.data.data || res.data.data.length === 0) {
        return message.reply("ржжрзБржГржЦрж┐ржд, ржХрзЛржирзЛ ржлрж╛ржирж┐ ржнрж┐ржбрж┐ржУ ржЦрзБржБржЬрзЗ ржкрзЗрж▓рж╛ржо ржирж╛ред");
      }

      const videoUrl = res.data.data[0].play; // ржбрж╛ржЙржирж▓рзЛржб рж▓рж┐ржВржХ
      const response = await axios.get(videoUrl, { responseType: 'stream' });

      return message.reply({
        body: "ржПржЗ ржирзЗ рждрзЛрж░ ржлрж╛ржирж┐ ржнрж┐ржбрж┐ржУ ЁЯЩВЁЯЩПЁЯП╗",
        attachment: response.data
      });

    } catch (err) {
      console.error(err);
      return message.reply("ржнрж┐ржбрж┐ржУ ржЖржирждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗред ржПржХржЯрзБ ржкрж░рзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзЛ!");
    }
  }
};
